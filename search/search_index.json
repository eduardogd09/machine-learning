{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Template de Entrega","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#grupokit-x","title":"Grupo/Kit X","text":"<ol> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> <li>Maria Oliveira</li> <li>Grupo K<ul> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> </ul> </li> </ol> <p>Instru\u00e7\u00f5es</p> <p>Voc\u00eas devem utilizar este template como um bloco de notas para registrar o que foi feito e o que falta fazer. Voc\u00eas devem adicionar as informa\u00e7\u00f5es necess\u00e1rias. O template deve ser editado e atualizado a cada entrega, registrando assim a data de entrega e o que foi feito at\u00e9 o momento via Git.</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#diagramas","title":"Diagramas","text":"<p>Use o Mermaid para criar os diagramas de documenta\u00e7\u00e3o.</p> <p>Mermaid Live Editor</p> <pre><code>flowchart TD\n    Deployment:::orange --&gt;|defines| ReplicaSet\n    ReplicaSet --&gt;|manages| pod((Pod))\n    pod:::red --&gt;|runs| Container\n    Deployment --&gt;|scales| pod\n    Deployment --&gt;|updates| pod\n\n    Service:::orange --&gt;|exposes| pod\n\n    subgraph  \n        ConfigMap:::orange\n        Secret:::orange\n    end\n\n    ConfigMap --&gt; Deployment\n    Secret --&gt; Deployment\n    classDef red fill:#f55\n    classDef orange fill:#ffa500</code></pre>"},{"location":"#codigos","title":"C\u00f3digos","text":"De um arquivo remotoAnota\u00e7\u00f5es no c\u00f3digo main.yaml<pre><code>name: ci\non:\n  - push\n  - pull_request\n\n# Environment\nenv:\n  CI: true\n  PYTHON_VERSION: 3.12\n\n# Jobs to run\njobs:\n\n  # Build and deploy documentation site\n  deploy:\n    if: github.event_name != 'pull_request' &amp;&amp; github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    steps:\n\n      # Checkout source form GitHub\n      - uses: actions/checkout@v4\n\n      # Install Python runtime and dependencies\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n\n      # pip\n      - run: |\n          pip install -r requirements.txt\n\n      # deploy\n      - run: |\n          mkdocs gh-deploy --force\n</code></pre> compose.yaml<pre><code>name: app\n\n    db:\n        image: postgres:17\n        environment:\n            POSTGRES_DB: ${POSTGRES_DB:-projeto} # (1)!\n            POSTGRES_USER: ${POSTGRES_USER:-projeto}\n            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}\n        ports:\n            - 5432:5432 #(2)!\n</code></pre> <ol> <li> <p>Caso a vari\u00e1vel de ambiente <code>POSTGRES_DB</code> n\u00e3o exista ou seja nula - n\u00e3o seja definida no arquivo <code>.env</code> - o valor padr\u00e3o ser\u00e1 <code>projeto</code>. Vide documenta\u00e7\u00e3o.</p> </li> <li> <p>Aqui \u00e9 feito um t\u00fanel da porta 5432 do container do banco de dados para a porta 5432 do host (no caso localhost). Em um ambiente de produ\u00e7\u00e3o, essa porta n\u00e3o deve ser exposta, pois ningu\u00e9m de fora do compose deveria acessar o banco de dados diretamente.</p> </li> </ol>"},{"location":"#exemplo-de-video","title":"Exemplo de v\u00eddeo","text":"<p>Lorem ipsum dolor sit amet</p>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"K-Means/main/","title":"K-Means","text":""},{"location":"K-Means/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<ol> <li>Explora\u00e7\u00e3o de dados: A base escolhida para testar a decision tree foi a \"Red Wine Quality\", uma base limpa que disp\u00f5e de 11 vari\u00e1veis que afetam a qualidade de um Vinho tinto, s\u00e3o elas: Fixed Acidity, Volatile Acidity, Citric Acid, Residual Sugar, Chlorides, Free Sulfur Dioxide, Total Sulfur Dioxide, Density, pH, Sulphates, Alcohol. Todas j\u00e1 est\u00e3o de forma adequada para o modelo.(A coluna \"Citric Acid\" possui alguns valores 0.0, por\u00e9m ainda \u00e9 coerente, alguns vinhos n\u00e3o possuem acido citrico). A partir destas vari\u00e1veis \u00e9 poss\u00edvel prever a qualidade do vinho, por isso para o treinamento temos a coluna 'Quality' que cont\u00e9m uma nota de 0 a 10 para o vinho, sendo esta nossa variavel target.</li> </ol>"},{"location":"K-Means/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>O conjunto de dados foi dividido em 80% para treino e 20% para um primeiro teste de valida\u00e7\u00e3o</p>"},{"location":"K-Means/main/#treinamento-e-resultados","title":"Treinamento e Resultados","text":"ResultsCode <p>Accuracy: 0.59  2025-09-28T23:38:56.794682 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ </p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\n\nplt.figure(figsize=(12, 10))\n\ndf = pd.read_csv('https://raw.githubusercontent.com/eduardogd09/machine-learning/refs/heads/main/winequality-red.csv')\n# Carregar o conjunto de dados\nx = df[['fixed acidity', 'volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]\n\n\nq = df['quality']\n\n# 4 categorias sem sobreposi\u00e7\u00e3o: 8 vai para a faixa 8\u201310\ncondicoes = [\n    q &lt; 3,                         # Cat 0\n    (q &gt;= 3) &amp; (q &lt;= 5),           # Cat 1\n    (q &gt;= 6) &amp; (q &lt; 8),            # Cat 2  (OBS: &lt; 8)\n    (q &gt;= 8) &amp; (q &lt;= 10)           # Cat 3  (OBS: &gt;= 8)\n]\nlabels = [0, 1, 2, 3]\ncat_arr = np.select(condicoes, labels, default=np.nan)\ndf['quality_cat'] = pd.Series(cat_arr, index=df.index).astype('Int64')\n\n\n# (opcional) r\u00f3tulos textuais\nlabel_txt = {0: '&lt;3', 1: '3\u20135', 2: '6\u20138', 3: '8\u201310'}\ndf['quality_cat_txt'] = df['quality_cat'].map(label_txt)\n\ny = df['quality_cat']\n\n# Dividir os dados em conjuntos de treinamento e teste\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\n# Train KNN model\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(x_train, y_train)\npredictions = knn.predict(x_test)\nprint(f\"Accuracy: {accuracy_score(y_test, predictions):.2f}\")\n\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(x)\n\n# Reduzir para 2 dimens\u00f5es (apenas para visualiza\u00e7\u00e3o)\npca = PCA(n_components=2)\nX_pca = pca.fit_transform(X_scaled)\n\n# Split train/test\nX_train, X_test, y_train, y_test = train_test_split(X_pca, y, test_size=0.3, random_state=42)\n\n# Treinar KNN\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\npredictions = knn.predict(X_test)\n\n\n# Visualize decision boundary\nh = 0.02  # Step size in mesh\nx_min, x_max = X_pca[:, 0].min() - 1, X_pca[:, 0].max() + 1\ny_min, y_max = X_pca[:, 1].min() - 1, X_pca[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n\nZ = knn.predict(np.c_[xx.ravel(), yy.ravel()])\nZ = Z.reshape(xx.shape)\n\nplt.contourf(xx, yy, Z, cmap=plt.cm.RdYlBu, alpha=0.3)\nsns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=y, style=y, palette=\"deep\", s=100)\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.title(\"KNN Decision Boundary (k=5)\")\n\n# Display the plot\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\", transparent=True)\nprint(buffer.getvalue())\n</code></pre>"},{"location":"K-Means/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do modelo","text":"<p>O modelo atingiu uma acur\u00e1cia de 0,59, o que indica a necessidade de ajustes para melhorar sua precis\u00e3o. Entre as poss\u00edveis estrat\u00e9gias est\u00e3o:</p> <p>Padronizar as vari\u00e1veis (StandardScaler) e reduzir multicolinearidade (correla\u00e7\u00e3o/VIF).</p> <p>Ajustar hiperpar\u00e2metros do KNN (k, weights, m\u00e9trica) com valida\u00e7\u00e3o cruzada.</p> <p>Testar divis\u00f5es de treino/teste (ex.: 70/30).</p> <p>Avaliar com m\u00e9tricas mais informativas em caso de desbalanceamento: balanced accuracy e F1 macro.</p> <p>Revisar as faixas de qualidade; se fizer sentido, testar KNN Regressor (nota 0\u201310) e discretizar depois</p>"},{"location":"KNN/main/","title":"KNN","text":""},{"location":"KNN/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<ol> <li>Explora\u00e7\u00e3o de dados: A base escolhida para testar a decision tree foi a \"Red Wine Quality\", uma base limpa que disp\u00f5e de 11 vari\u00e1veis que afetam a qualidade de um Vinho tinto, s\u00e3o elas: Fixed Acidity, Volatile Acidity, Citric Acid, Residual Sugar, Chlorides, Free Sulfur Dioxide, Total Sulfur Dioxide, Density, pH, Sulphates, Alcohol. Todas j\u00e1 est\u00e3o de forma adequada para o modelo.(A coluna \"Citric Acid\" possui alguns valores 0.0, por\u00e9m ainda \u00e9 coerente, alguns vinhos n\u00e3o possuem acido citrico). A partir destas vari\u00e1veis \u00e9 poss\u00edvel prever a qualidade do vinho, por isso para o treinamento temos a coluna 'Quality' que cont\u00e9m uma nota de 0 a 10 para o vinho, sendo esta nossa variavel target.</li> </ol>"},{"location":"KNN/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>O conjunto de dados foi dividido em 80% para treino e 20% para um primeiro teste de valida\u00e7\u00e3o</p>"},{"location":"KNN/main/#treinamento-e-resultados","title":"Treinamento e Resultados","text":"ResultsCode <p>Accuracy: 0.59  2025-09-28T23:38:59.581126 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ </p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\n\nplt.figure(figsize=(12, 10))\n\ndf = pd.read_csv('https://raw.githubusercontent.com/eduardogd09/machine-learning/refs/heads/main/winequality-red.csv')\n# Carregar o conjunto de dados\nx = df[['fixed acidity', 'volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]\n\n\nq = df['quality']\n\n# 4 categorias sem sobreposi\u00e7\u00e3o: 8 vai para a faixa 8\u201310\ncondicoes = [\n    q &lt; 3,                         # Cat 0\n    (q &gt;= 3) &amp; (q &lt;= 5),           # Cat 1\n    (q &gt;= 6) &amp; (q &lt; 8),            # Cat 2  (OBS: &lt; 8)\n    (q &gt;= 8) &amp; (q &lt;= 10)           # Cat 3  (OBS: &gt;= 8)\n]\nlabels = [0, 1, 2, 3]\ncat_arr = np.select(condicoes, labels, default=np.nan)\ndf['quality_cat'] = pd.Series(cat_arr, index=df.index).astype('Int64')\n\n\n# (opcional) r\u00f3tulos textuais\nlabel_txt = {0: '&lt;3', 1: '3\u20135', 2: '6\u20138', 3: '8\u201310'}\ndf['quality_cat_txt'] = df['quality_cat'].map(label_txt)\n\ny = df['quality_cat']\n\n# Dividir os dados em conjuntos de treinamento e teste\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\n# Train KNN model\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(x_train, y_train)\npredictions = knn.predict(x_test)\nprint(f\"Accuracy: {accuracy_score(y_test, predictions):.2f}\")\n\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(x)\n\n# Reduzir para 2 dimens\u00f5es (apenas para visualiza\u00e7\u00e3o)\npca = PCA(n_components=2)\nX_pca = pca.fit_transform(X_scaled)\n\n# Split train/test\nX_train, X_test, y_train, y_test = train_test_split(X_pca, y, test_size=0.3, random_state=42)\n\n# Treinar KNN\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\npredictions = knn.predict(X_test)\n\n\n# Visualize decision boundary\nh = 0.02  # Step size in mesh\nx_min, x_max = X_pca[:, 0].min() - 1, X_pca[:, 0].max() + 1\ny_min, y_max = X_pca[:, 1].min() - 1, X_pca[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n\nZ = knn.predict(np.c_[xx.ravel(), yy.ravel()])\nZ = Z.reshape(xx.shape)\n\nplt.contourf(xx, yy, Z, cmap=plt.cm.RdYlBu, alpha=0.3)\nsns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=y, style=y, palette=\"deep\", s=100)\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.title(\"KNN Decision Boundary (k=5)\")\n\n# Display the plot\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\", transparent=True)\nprint(buffer.getvalue())\n</code></pre>"},{"location":"KNN/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do modelo","text":"<p>O modelo atingiu uma acur\u00e1cia de 0,59, o que indica a necessidade de ajustes para melhorar sua precis\u00e3o. Entre as poss\u00edveis estrat\u00e9gias est\u00e3o:</p> <p>Padronizar as vari\u00e1veis (StandardScaler) e reduzir multicolinearidade (correla\u00e7\u00e3o/VIF).</p> <p>Ajustar hiperpar\u00e2metros do KNN (k, weights, m\u00e9trica) com valida\u00e7\u00e3o cruzada.</p> <p>Testar divis\u00f5es de treino/teste (ex.: 70/30).</p> <p>Avaliar com m\u00e9tricas mais informativas em caso de desbalanceamento: balanced accuracy e F1 macro.</p> <p>Revisar as faixas de qualidade; se fizer sentido, testar KNN Regressor (nota 0\u201310) e discretizar depois</p>"},{"location":"projeto/main/","title":"Decision Tree","text":""},{"location":"projeto/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<ol> <li>Explora\u00e7\u00e3o de dados: A base escolhida para testar a decision tree foi a \"Red Wine Quality\", uma base limpa que disp\u00f5e de 11 vari\u00e1veis que afetam a qualidade de um Vinho tinto, s\u00e3o elas: Fixed Acidity, Volatile Acidity, Citric Acid, Residual Sugar, Chlorides, Free Sulfur Dioxide, Total Sulfur Dioxide, Density, pH, Sulphates, Alcohol. Todas j\u00e1 est\u00e3o de forma adequada para o modelo.(A coluna \"Citric Acid\" possui alguns valores 0.0, por\u00e9m ainda \u00e9 coerente, alguns vinhos n\u00e3o possuem acido citrico). A partir destas vari\u00e1veis \u00e9 poss\u00edvel prever a qualidade do vinho, por isso para o treinamento temos a coluna 'Quality' que cont\u00e9m uma nota de 0 a 10 para o vinho, sendo esta nossa variavel target.</li> </ol>"},{"location":"projeto/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>O conjunto de dados foi dividido em 80% para treino e 20% para um primeiro teste de valida\u00e7\u00e3o</p>"},{"location":"projeto/main/#treinamento-e-resultados","title":"Treinamento e Resultados","text":"ResultsCode <p>Feature Importances:  Feature Importance 10 alcohol 0.173819 6 total sulfur dioxide 0.119710 7 density 0.105361 9 sulphates 0.103027 2 citric acid 0.083754 1 volatile acidity 0.082115 8 pH 0.080950 4 chlorides 0.079560 3 residual sugar 0.063364 0 fixed acidity 0.056927 5 free sulfur dioxide 0.051414  Accuracy: 0.57  2025-09-28T23:39:02.003183 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ </p> <pre><code>import matplotlib.pyplot as plt\nimport pandas as pd\n\nfrom io import StringIO\nfrom sklearn import tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\n\nplt.figure(figsize=(12, 10))\n\ndf = pd.read_csv('https://raw.githubusercontent.com/eduardogd09/machine-learning/refs/heads/main/winequality-red.csv')\n\nlabel_encoder = LabelEncoder()\n\n# Carregar o conjunto de dados\nx = df[['fixed acidity', 'volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]\ny = df['quality']\n\n# Dividir os dados em conjuntos de treinamento e teste\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\n# Criar e treinar o modelo de \u00e1rvore de decis\u00e3o\nclassifier = tree.DecisionTreeClassifier()\nclassifier.fit(x_train, y_train)\n\n# Optional: Print feature importances\nfeature_importance = pd.DataFrame({\n    'Feature':['fixed acidity', 'volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol'],\n\n    'Importance': classifier.feature_importances_\n})\nprint(\"&lt;br&gt;Feature Importances:\")\nprint(feature_importance.sort_values(by='Importance', ascending=False).to_html())\n\n\n# Avaliar o modelo\naccuracy = classifier.score(x_test, y_test)\nprint(f\"Accuracy: {accuracy:.2f}\")\ntree.plot_tree(classifier)\n\n# Para imprimir na p\u00e1gina HTML\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\")\nprint(buffer.getvalue())\n</code></pre>"},{"location":"projeto/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do modelo","text":"<p>O modelo atingiu uma acur\u00e1cia de 0,56, o que indica a necessidade de ajustes para melhorar sua precis\u00e3o. Entre as poss\u00edveis estrat\u00e9gias est\u00e3o a remo\u00e7\u00e3o de uma eventual multicolinearidade, a realiza\u00e7\u00e3o de testes com diferentes propor\u00e7\u00f5es de treino e teste (como 70/30), al\u00e9m da aplica\u00e7\u00e3o de outras boas pr\u00e1ticas de modelagem.</p>"},{"location":"roteiro1/main/","title":"Roteiro 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"roteiro1/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"roteiro1/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro2/main/","title":"Roteiro 2","text":""},{"location":"roteiro2/main/#diagrama-de-classes-do-banco","title":"Diagrama de Classes do Banco","text":"<pre><code>classDiagram\n    class Conta {\n        - String id\n        # double saldo\n        - Cliente cliente\n        + sacar(double valor)\n        + depositar(double valor)\n    }\n    class Cliente {\n        - String id\n        - String nome\n        - List&lt;Conta&gt; contas\n    }\n    class PessoaFisica {\n        - String cpf\n    }\n    class PessoaJuridica {\n        - String cnpj\n    }\n    class ContaCorrente {\n        - double limite\n        + sacar(double valor)\n    }\n    class ContaPoupanca {\n        + sacar(double valor)\n    }\n    Conta *-- Cliente\n    Conta &lt;|-- ContaCorrente\n    Conta &lt;|-- ContaPoupanca\n    Cliente &lt;|-- PessoaFisica\n    Cliente &lt;|-- PessoaJuridica</code></pre>"},{"location":"roteiro2/main/#diagrama-de-sequencia-de-autorizacao","title":"Diagrama de Seq\u00fc\u00eancia de Autoriza\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n  autonumber\n  actor User\n  User-&gt;&gt;Auth Service: request with token\n  Auth Service-&gt;&gt;Auth Service: decodes the token and extracts claims\n  Auth Service-&gt;&gt;Auth Service: verifies permissions\n  critical allowed\n    Auth Service-&gt;&gt;Secured Resource: authorizes the request\n    Secured Resource-&gt;&gt;User: returns the response\n  option denied\n    Auth Service--&gt;&gt;User: unauthorized message\n  end  </code></pre>"},{"location":"roteiro3/main/","title":"Roteiro 3","text":"<p>Running the code below in Browser (Woooooowwwwww!!!!!!). <sup>1</sup></p> <p> Editor (session: default) Run <pre>import ssl\nimport pandas as pd\n\ndf = pd.DataFrame()\ndf['AAPL'] = pd.Series([1, 2, 3])\ndf['MSFT'] = pd.Series([4, 5, 6])\ndf['GOOGL'] = pd.Series([7, 8, 9])\n\nprint(df)\n</pre> Output Clear <pre></pre> </p> <ol> <li> <p>Pyodide \u21a9</p> </li> </ol>"},{"location":"roteiro4/main/","title":"Roteiro 4","text":"<p>Se chegou aqui, \u00e9 porque voc\u00ea est\u00e1 interessado em saber mais. Logo, de brinde, como rodar um c\u00f3digo <code>Python</code> aqui.</p> 2025-09-28T23:39:10.309180 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ 2025-09-28T23:39:11.547190 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ <p>Markdown-exec \u00e9 uma extens\u00e3o do Markdown que permite executar c\u00f3digo Python diretamente no Markdown. Isso \u00e9 \u00fatil para gerar resultados din\u00e2micos ou executar scripts de forma interativa.</p>"}]}